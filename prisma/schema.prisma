// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

// This block defines how Prisma connects to your database.
datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// User Model: Represents a user in your application
model User {
  id        String    @id @default(cuid())
  email     String    @unique
  name      String?
  password  String?   // Password can be optional if using social logins
  image     String?   // For user profile pictures
  verified  Boolean   @default(false) // NEW: Field to track if the user's account is verified
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  events    Event[]   // A user can create many events
  otpcodes  OTPCodes[] // A user can have many OTP codes
}

// Event Model: Represents an event created by a user
model Event {
  id          String    @id @default(cuid())
  title       String
  description String
  date        DateTime
  location    String
  imageUrl    String?   // URL for the event's banner image
  organizerId String    // ID of the user who created this event
  organizer   User      @relation(fields: [organizerId], references: [id]) // Link to the User model
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

// OTPCodes Model: Stores one-time passwords for user verification
model OTPCodes {
  id        String    @id @default(cuid())
  userId    String    // ID of the user this OTP belongs to
  user      User      @relation(fields: [userId], references: [id]) // Link to the User model
  code      String    // The actual OTP code
  expiresAt DateTime  // When the OTP expires
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@unique([userId, code]) // Ensures a user doesn't have duplicate active codes
}
